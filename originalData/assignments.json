[
    {
        "name": "Final Unity Game Project",
        "due": 1756200000000,
        "overview": "Build a complete 3D game. Implement game mechanics, user interface, and physics.",
        "type": "Project",
        "attachments": [
            {
                "name": "Project Requirements Guide",
                "url": "https://example.com/project-requirements-guide.pdf",
                "emoji": "üìÑ"
            },
            {
                "name": "Unity Asset Pack",
                "url": "https://example.com/unity-asset-pack.zip",
                "emoji": "üì¶"
            }
        ],
        "id": "1",
        "courseId": "1"
    },
    {
        "name": "Level Design Challenge",
        "due": 1756201000000,
        "overview": "Create a complex level for an existing game. Implement level design principles and ensure it is fun and playable.",
        "type": "Project",
        "attachments": [
            {
                "name": "Level Design Checklist",
                "url": "https://example.com/level-design-checklist.docx",
                "emoji": "üìù"
            },
            {
                "name": "Reference Level Map",
                "url": "https://example.com/reference-level-map.png",
                "emoji": "üó∫Ô∏è"
            }
        ],
        "id": "2",
        "courseId": "1"
    },
    {
        "name": "Blueprint Maze",
        "due": 1756300000000,
        "overview": "Design and build a simple maze game using only visual scripting with Blueprints in Unreal Engine.",
        "type": "Project",
        "attachments": [
            {
                "name": "Maze Blueprint Example",
                "url": "https://example.com/maze-blueprint-example.zip",
                "emoji": "üì¶"
            }
        ],
        "id": "3",
        "courseId": "2"
    },
    {
        "name": "Lighting Practice",
        "due": 1756301000000,
        "overview": "Experiment with lighting in an Unreal Engine level. Create a nighttime and a daytime atmosphere, and document your process.",
        "type": "Practice",
        "attachments": [
            {
                "name": "Lighting Scene Example",
                "url": "https://example.com/lighting-example-scene.zip",
                "emoji": "üì¶"
            }
        ],
        "id": "4",
        "courseId": "2"
    },
    {
        "name": "Game Concept Document",
        "due": 1756400000000,
        "overview": "Develop a detailed Game Concept Document (GDD) for a new game. It must include core mechanics, key elements, and target audience.",
        "type": "Document",
        "attachments": [
            {
                "name": "GDD Template",
                "url": "https://example.com/gdd-template.pdf",
                "emoji": "üìÑ"
            }
        ],
        "id": "5",
        "courseId": "3"
    },
    {
        "name": "Mechanics, Dynamics, and Aesthetics Analysis",
        "due": 1756401000000,
        "overview": "Choose a game and analyze its mechanics, dynamics, and aesthetics (MDA) in a brief report. Explain how they are interrelated.",
        "type": "Analysis",
        "attachments": [
            {
                "name": "MDA Report Template",
                "url": "https://example.com/mda-template.docx",
                "emoji": "üìù"
            }
        ],
        "id": "6",
        "courseId": "3"
    },
    {
        "name": "RESTful API with Express.js",
        "due": 1756500000000,
        "overview": "Build a complete RESTful API for a blog application using Node.js and Express.js. The API should allow managing posts and users.",
        "type": "Project",
        "attachments": [
            {
                "name": "Express.js Boilerplate",
                "url": "https://example.com/express-boilerplate.zip",
                "emoji": "üì¶"
            },
            {
                "name": "API Design Specifications",
                "url": "https://example.com/api-specs.pdf",
                "emoji": "üìÑ"
            }
        ],
        "id": "7",
        "courseId": "4"
    },
    {
        "name": "User Authentication Script",
        "due": 1756501000000,
        "overview": "Create a user authentication module with registration, login, and JSON Web Tokens (JWT).",
        "type": "Project",
        "attachments": [
            {
                "name": "JWT Library Documentation",
                "url": "https://example.com/jwt-docs.html",
                "emoji": "üìÑ"
            }
        ],
        "id": "8",
        "courseId": "4"
    },
    {
        "name": "E-commerce Database Schema Design",
        "due": 1756600000000,
        "overview": "Design a normalized database schema for an e-commerce platform. Include an Entity-Relationship Diagram (ERD).",
        "type": "Diagram and Report",
        "attachments": [
            {
                "name": "ERD Example",
                "url": "https://example.com/erd-example.png",
                "emoji": "üñºÔ∏è"
            },
            {
                "name": "Database Schema Report",
                "url": "https://example.com/db-report.docx",
                "emoji": "üìù"
            }
        ],
        "id": "9",
        "courseId": "5"
    },
    {
        "name": "Complex SQL Queries Practice",
        "due": 1756601000000,
        "overview": "Solve a set of practice problems requiring advanced SQL queries, including JOINS and subqueries.",
        "type": "Practice",
        "attachments": [
            {
                "name": "SQL Practice Problems",
                "url": "https://example.com/sql-practice-problems.pdf",
                "emoji": "üìÑ"
            }
        ],
        "id": "10",
        "courseId": "5"
    },
    {
        "name": "API Comparison Report",
        "due": 1756700000000,
        "overview": "Implement a simple API using REST and GraphQL. Write a report comparing the advantages and disadvantages of each approach.",
        "type": "Project and Report",
        "attachments": [
            {
                "name": "API Comparison Rubric",
                "url": "https://example.com/api-comparison-rubric.pdf",
                "emoji": "üìÑ"
            },
            {
                "name": "GraphQL vs REST Video",
                "url": "https://example.com/graphql-rest-video.mp4",
                "emoji": "‚ñ∂Ô∏è"
            }
        ],
        "id": "11",
        "courseId": "6"
    },
    {
        "name": "GraphQL Schema for Blog",
        "due": 1756701000000,
        "overview": "Create a GraphQL schema for a blog application. Define types, queries, and mutations.",
        "type": "Practice",
        "attachments": [
            {
                "name": "GraphQL Schema Example",
                "url": "https://example.com/graphql-schema-example.graphql",
                "emoji": "üìÑ"
            }
        ],
        "id": "12",
        "courseId": "6"
    },
    {
        "name": "Advanced State Management Project",
        "due": 1756800000000,
        "overview": "Create a React application that uses Redux Toolkit or a Context API to manage complex state across multiple components.",
        "type": "Project",
        "attachments": [
            {
                "name": "Redux Toolkit Tutorial",
                "url": "https://example.com/redux-tutorial.pdf",
                "emoji": "üìÑ"
            },
            {
                "name": "React-Redux Repo",
                "url": "https://example.com/react-redux-repo.zip",
                "emoji": "üì¶"
            }
        ],
        "id": "13",
        "courseId": "7"
    },
    {
        "name": "Use of 'useMemo' and 'useCallback'",
        "due": 1756801000000,
        "overview": "Refactor a given React application to use the 'useMemo' and 'useCallback' hooks to optimize performance.",
        "type": "Code Exercise",
        "attachments": [
            {
                "name": "Optimization Challenge Codebase",
                "url": "https://example.com/react-optimization-code.zip",
                "emoji": "üì¶"
            },
            {
                "name": "Performance Optimization Video",
                "url": "https://example.com/optimization-video.mp4",
                "emoji": "‚ñ∂Ô∏è"
            }
        ],
        "id": "14",
        "courseId": "7"
    },
    {
        "name": "Component Testing Module",
        "due": 1756900000000,
        "overview": "Write a set of unit tests for an existing Angular component, using Karma and Jasmine.",
        "type": "Project",
        "attachments": [
            {
                "name": "Angular Testing Documentation",
                "url": "https://example.com/angular-testing-docs.html",
                "emoji": "üìÑ"
            }
        ],
        "id": "15",
        "courseId": "8"
    },
    {
        "name": "NgRx Implementation",
        "due": 1756901000000,
        "overview": "Integrate NgRx into an Angular application. Implement at least one 'store' with 'actions' and 'selectors'.",
        "type": "Project",
        "attachments": [
            {
                "name": "NgRx Official Guide",
                "url": "https://example.com/ngrx-guide.pdf",
                "emoji": "üìÑ"
            }
        ],
        "id": "16",
        "courseId": "8"
    },
    {
        "name": "CSS-in-JS Project",
        "due": 1757000000000,
        "overview": "Create a small library of reusable components using a CSS-in-JS solution like Styled Components.",
        "type": "Project",
        "attachments": [
            {
                "name": "Styled Components Tutorial",
                "url": "https://example.com/styled-components-tutorial.pdf",
                "emoji": "üìÑ"
            },
            {
                "name": "Styled Components Boilerplate",
                "url": "https://example.com/styled-components-boilerplate.zip",
                "emoji": "üì¶"
            }
        ],
        "id": "17",
        "courseId": "9"
    },
    {
        "name": "Stylesheet with BEM Methodology",
        "due": 1757001000000,
        "overview": "Rewrite the stylesheet of a given project using the BEM naming methodology to improve scalability.",
        "type": "Code Exercise",
        "attachments": [
            {
                "name": "BEM Methodology Guide",
                "url": "https://example.com/bem-guide.pdf",
                "emoji": "üìÑ"
            }
        ],
        "id": "18",
        "courseId": "9"
    },
    {
        "name": "Algebra and Functions Problems",
        "due": 1757100000000,
        "overview": "Solve a series of problems on equations, inequalities, and functions. Show all steps of the solution.",
        "type": "Assignment",
        "attachments": [
            {
                "name": "Math Practice Worksheet",
                "url": "https://example.com/math-worksheet.pdf",
                "emoji": "üìÑ"
            },
            {
                "name": "Answer Key",
                "url": "https://example.com/math-worksheet-answers.pdf",
                "emoji": "üîë"
            }
        ],
        "id": "19",
        "courseId": "10"
    },
    {
        "name": "Statistical Analysis Report",
        "due": 1757101000000,
        "overview": "Analyze a provided data set, calculate measures of central tendency and dispersion, and present your findings in a report.",
        "type": "Report",
        "attachments": [
            {
                "name": "Sample Data Set",
                "url": "https://example.com/sample-data.csv",
                "emoji": "üìä"
            }
        ],
        "id": "20",
        "courseId": "10"
    },
    {
        "name": "Lab Report on Forces",
        "due": 1757200000000,
        "overview": "Write a lab report based on a virtual or physical experiment that demonstrates Newton's laws of motion.",
        "type": "Report",
        "attachments": [
            {
                "name": "Lab Report Template",
                "url": "https://example.com/lab-report-template.docx",
                "emoji": "üìù"
            },
            {
                "name": "Experiment Video",
                "url": "https://example.com/lab-experiment-video.mp4",
                "emoji": "‚ñ∂Ô∏è"
            }
        ],
        "id": "21",
        "courseId": "11"
    },
    {
        "name": "Conservation of Energy Simulation",
        "due": 1757201000000,
        "overview": "Create a small simulation or diagram illustrating the principle of conservation of energy, for example, using a pendulum.",
        "type": "Diagram",
        "attachments": [
            {
                "name": "Physics Simulation Guide",
                "url": "https://example.com/physics-sim-guide.pdf",
                "emoji": "üìÑ"
            }
        ],
        "id": "22",
        "courseId": "11"
    },
    {
        "name": "Atomic Structure Quiz",
        "due": 1757300000000,
        "overview": "A brief quiz to test your understanding of atomic components and the periodic table.",
        "type": "Quiz",
        "attachments": [
            {
                "name": "Periodic Table Chart",
                "url": "https://example.com/periodic-table.png",
                "emoji": "üñºÔ∏è"
            },
            {
                "name": "Interactive Quiz Link",
                "url": "https://example.com/atomic-quiz-link",
                "emoji": "üîó"
            }
        ],
        "id": "23",
        "courseId": "12"
    }
]